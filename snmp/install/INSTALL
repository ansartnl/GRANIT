
1. Установить демон snmp, стандартные MIB файлы и developer версию библиотеки libsnmp.
2. Создать конфигурационный файл snmp.conf, содержащий информацию о загружающихся MIB файлах.
3. Создать конфигурационный файл для субагента, содержащий информацию об используемом способе общения с агентом snmpd.
4. Создать/скопировать MIB файлы для контролируемых параметров.
5. Настроить /etc/snmp/snmpd.conf (при его отсутствии - можно создать базовый конфиг командой `snmpconf -g basic_setup`).
6. Перезагрузить агента snmpd.

Для deb-based дистрибутивов linux написан скрипт deb-based.sh, выполняющий все вышеперечисленные действия.

Используемая версия протокола SNMP - 2c.

Известные проблемы:

1. snmp sub-agent должен быть запущен после snmpd. В случае, если snmpd был перезапущен, snmp sub-agent так же должен быть перезапущен.

Update: поддержка ловушек

1. Настроить /etc/snmp/snmptrapd.conf (пример конфигурации см. рядом).
2. Запустить snmptrapd. При наличии snmpd для этого необходимо:
    - в файле /etc/default/snmpd установить значение TRAPDRUN=yes
    - перезапустить snmpd (snmptrapd будет запущен автоматически)
3. При необходимости, написать запускаемые скрипты.

При использовании netSnmpTrapHandler для передачи информации о ловушке следует написать скрипт, передающий netSnmpTrapHandler следующие параметры (парядок и формат - важны):
1. Название соответствующей ловушки из файла snmptrapd.conf.
2. Хост.
3. IP - поле вида "PROTOCOL: [source_ip]:source_port->[dest_ip]", взятое в кавычки (должно быть видно, как один аргумент, а не как два).
3. Список связанных переменных в виде 'oid=value', разделённых пробелами.

Для передачи данных netSnmpTrapHandler использует протокол UDP, адрес - localhost.

Пример скрипта: trap.sh

#!/bin/bash

SCRIPT=$( readlink -f $0 )
THIS_DIR=$( dirname $SCRIPT )
cd $THIS_DIR

read host
read ip
vars=

while read oid val
do
  if [ "$vars" = "" ]
  then
    vars="$oid=$val"
  else
    vars="$vars $oid=$val"
  fi
done

./netSnmpTrapHandler $1 $host "$ip" $vars
